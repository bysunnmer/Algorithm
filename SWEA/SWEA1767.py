# 25.04.20

# N * N 셀
# 한 개의 셀에는 한 개의 core 또는 전선
# 가장 자리에는 전원이 흐름
# core 와 전원 연결하는 전선은 직선으로만 설치 가능
# 전선 교차 불가능
# 전선 연결하기 전 상태의 멕시노스 정보 주어짐
# 가장자리에 위치한 core 는 이미 전원 연결된 것
# 최대한 많은 core 에 전원 연결했을 때, 전선 길이의 합
# 여러 방법 중엔 전선 길이의 합이 최소가 되는 값 구하기


def cable(r, c):

    for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
        cnt = 0
        nr, nc = r + dr, c + dc
        while 0 <= nr < N and 0 <= nc < N:
            if arr[nr][nc] != 0:
                break
            cnt += 1
            nr += dr
            nc += dc


T = int(input())
for tc in range(1, T+1):
    N = int(input())
    arr = [list(map(int, input().split())) for _ in range(N)]

    # 코어 좌표들 체크하고 이미 가장자리에 있는 애들은 제외 (이건 처음 좌표 저장할때 제외하고 넣어도되려나)
    # 처음 코어부터
    # 델타 + 연결 안 하는 경우를 for 문으로 돌기
    # 하나의 경우 선택하면 arr 에 2로 전선 표시해놓고 다음 코어 반복
    # 이때 누적으로 기억해야될 것은 전선 길이의 합이랑 몇개 연결중인지
    # 마지막 코어에 도착했을 때 전선 길이의 합이랑 연결 코어 개수 max min 값 갱신하기
    # 마지막 코어 끝나면 2로 표시해놓은 전선 다시 0으로 돌려놓고 되돌아오기
    #